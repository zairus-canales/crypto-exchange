{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/CoinHeader/cryptoExchangeLogo.png","components/CoinHeader/CoinHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControl","TdName","Button","button","Coin","props","name","ticker","price","showBalance","balance","className","action","method","onClick","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","Section","section","Balance","div","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonClass","handleBalanceVisibilityChange","handleAddBalance","Img","img","Header","header","H1","h1","CoinHeader","src","logo","alt","Div","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldBalance","oldValue","isBuy","balanceChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3d2c673.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 14vw;\r\n`;\r\n\r\nconst TdControl = styled(Td)`\r\n    width: 34vw;\r\n`;\r\n\r\nconst TdName = styled(Td)`\r\n    width: 24vw;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 11px;\r\n    width: 64px;\r\n    margin: 3px 5px 0;\r\n`;\r\n\r\nexport default function Coin(props)  {\r\n\r\n    const handleRefresh = (event) => {\r\n        event.preventDefault();\r\n        props.handleRefresh(props.tickerId);\r\n    }\r\n\r\n    const handleBuy = (event) => {\r\n        event.preventDefault();\r\n        props.handleTransaction(true, props.tickerId);\r\n    }\r\n\r\n    const handleSell = (event) => {\r\n        event.preventDefault();\r\n        props.handleTransaction(false, props.tickerId);\r\n    }\r\n   \r\n    return (\r\n        <tr>\r\n            <TdName>{props.name}</TdName>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            <Td>{props.showBalance ? props.balance : <form><i className=\"fas fa-eye-slash\"></i></form> }</Td>\r\n            <TdControl>\r\n                    <form action=\"#\" method=\"POST\">\r\n                        <Button className=\"btn btn-info\" onClick={handleRefresh}>\r\n                            Refresh\r\n                        </Button>\r\n                        <Button className=\"btn btn-warning\" onClick={handleBuy}>\r\n                            Buy\r\n                        </Button>\r\n                        <Button className=\"btn btn-danger\" onClick={handleSell}>\r\n                            Sell\r\n                        </Button>\r\n                    </form>\r\n            </TdControl>\r\n        </tr>\r\n    );\r\n    \r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Coin from '../Coin/Coin';\r\n\r\nconst Table = styled.table`\r\n  margin: 50px auto 50px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n    \r\n  return (\r\n      <Table className=\"table table-primary table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          <th>Balance</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n       <tbody>\r\n      {\r\n            props.coinData.map( ({key, name, ticker, price, balance}) => \r\n            <Coin key={key} \r\n                  handleRefresh={props.handleRefresh}\r\n                  handleTransaction={props.handleTransaction}\r\n                  name={name} \r\n                  ticker={ticker} \r\n                  showBalance={props.showBalance}\r\n                  balance={balance}\r\n                  price={price}\r\n                  tickerId={key} /> \r\n          )\r\n        }\r\n      </tbody>\r\n      </Table>\r\n      )    \r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n    line-height: 3rem;\r\n    display: inline-block;\r\n`;\r\n\r\nconst Balance = styled.div`\r\n    min-width: 250px;\r\n    margin: 0.5rem 0 0 2.5rem;\r\n    font-size: 1.5em;\r\n    vertical-align: middle;\r\n    text-align: left;\r\n    color: white;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin: 0 8px;\r\n`;\r\n\r\nconst BalanceToggleButton = styled(Button)`\r\n    width: 150px;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\n\r\nexport default function AccountBalance(props) {\r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance'\r\n    let content = '\\u00A0';\r\n    if (props.showBalance) {\r\n        content = <>{ formatter.format(props.amount) }</>\r\n    }\r\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\r\n    return (\r\n        <>\r\n            <Balance>{content}</Balance>\r\n            <Section>  \r\n                <BalanceToggleButton \r\n                    onClick={props.handleBalanceVisibilityChange}\r\n                    className={buttonClass}>\r\n                    {buttonText}\r\n                </BalanceToggleButton>\r\n                <Button className=\"btn btn-success\"\r\n                        onClick={props.handleAddBalance}>\r\n                    <i className=\"fas fa-helicopter\"></i>\r\n                </Button>\r\n            </Section>\r\n        </>\r\n    );\r\n    \r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","export default __webpack_public_path__ + \"static/media/cryptoExchangeLogo.40de79fe.png\";","import React from 'react'\r\nimport logo from './cryptoExchangeLogo.png';\r\nimport styled from 'styled-components';\r\n\r\nconst Img = styled.img`\r\n    height: 7.5rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 10vh;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center center;\r\n    justify-content: flex-start;\r\n`;\r\n  \r\nconst H1 = styled.h1`\r\n    font-size: 4rem;\r\n    line-height: 7.5rem;\r\n    font-weight: bold;\r\n    min-width: 100px;\r\n    color: white;\r\n`;\r\n\r\nexport default function CoinHeader() {\r\n    return (\r\n    <Header>\r\n      <Img src={logo} alt=\"CryptoExchange logo\" /> \r\n      <H1> \r\n        Crypto Exchange\r\n      </H1>\r\n    </Header>\r\n    ) \r\n}\r\n","import React, {useEffect, useState} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport styled from 'styled-components';\nimport CoinHeader from './components/CoinHeader/CoinHeader';\nimport axios from 'axios';\n\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/sandstone/bootstrap.min.css';\n\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst Div = styled.div`\n    text-align: center;\n    background-color: #282c34;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(20000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');    \n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map( id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    setCoinData(coinPriceData);\n  }\n  \n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const handleAddBalance = () => {\n    setBalance (oldBalance => oldBalance + 1200);\n  }\n\n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map( function(values) {\n      let newValues = {...values};\n      if ( valueChangeId === values.key) {\n        newValues.balance += balanceChange;\n        setBalance( oldBalance => oldBalance - balanceChange * newValues.price );\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl); \n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = { ...values };\n      if ( valueChangeId === values.key ) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    }); \n    setCoinData(newCoinData);\n  }\n  return (\n    <Div className=\"App\">\n      <CoinHeader />\n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance}\n        handleAddBalance={handleAddBalance}  \n        handleBalanceVisibilityChange={handleBalanceVisibilityChange}  />\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        handleTransaction={handleTransaction}\n        handleRefresh={handleRefresh} />\n    </Div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}